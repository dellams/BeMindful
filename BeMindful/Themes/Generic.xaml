<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PerpetuumSoft.Controls">

  <!-- Common Values -->

  <ResourceDictionary.ThemeDictionaries>
    <ResourceDictionary x:Key="Default">
      <SolidColorBrush x:Key="PerpetuumForegroundThemeBrush" Color="#FF000000" />
      <SolidColorBrush x:Key="PerpetuumBackgroundThemeBrush" Color="#CCFFFFFF" />
      <SolidColorBrush x:Key="PerpetuumBorderThemeBrush" Color="#CCFFFFFF" />
      <Thickness x:Key="PerpetuumBorderThemeThickness">2</Thickness>

      <SolidColorBrush x:Key="RatingBackroundThemeBrush" Color="#FF1D1D1D" />
      <SolidColorBrush x:Key="RatingBorderThemeBrush" Color="#99FFFFFF" />
    </ResourceDictionary>

    <ResourceDictionary x:Key="Light">
      <SolidColorBrush x:Key="PerpetuumForegroundThemeBrush" Color="#FF000000" />
      <SolidColorBrush x:Key="PerpetuumBackgroundThemeBrush" Color="#CCFFFFFF" />
      <SolidColorBrush x:Key="PerpetuumBorderThemeBrush" Color="#45000000" />
      <Thickness x:Key="PerpetuumBorderThemeThickness">2</Thickness>

      <SolidColorBrush x:Key="RatingBackroundThemeBrush" Color="#CCFFFFFF" />
      <SolidColorBrush x:Key="RatingBorderThemeBrush" Color="#45000000" />
    </ResourceDictionary>
  </ResourceDictionary.ThemeDictionaries>

  <x:Double x:Key="RatingItemThemeSize">25</x:Double>
  <x:Double x:Key="RatingThemeItemCount">5</x:Double>
  <Thickness x:Key="RatingBorderThemeThickness">1</Thickness>
  <SolidColorBrush x:Key="RatingForegroundThemeBrush" Color="Yellow" />
  <SolidColorBrush x:Key="RatingHighlightThemeBrush" Color="Orange" />  

  <!-- Common Styles -->

  <Style TargetType="Rectangle" x:Name="FocusVisualWhiteRectangleThemeStyle">
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="Stroke" Value="{StaticResource FocusVisualWhiteStrokeThemeBrush}" />
    <Setter Property="StrokeEndLineCap" Value="Square" />
    <Setter Property="StrokeDashArray" Value="1,1" />
    <Setter Property="Opacity" Value="0" />
    <Setter Property="StrokeDashOffset" Value="1.5" />
    <Setter Property="Margin" Value="-2" />
  </Style>

  <Style TargetType="Rectangle" x:Name="FocusVisualBlackRectangleThemeStyle">
    <Setter Property="StrokeDashArray" Value="1" />
    <Setter Property="IsHitTestVisible" Value="False" />
    <Setter Property="Stroke" Value="{StaticResource FocusVisualBlackStrokeThemeBrush}" />
    <Setter Property="StrokeEndLineCap" Value="Square" />
    <Setter Property="StrokeDashArray" Value="1,1" />
    <Setter Property="Opacity" Value="0" />
    <Setter Property="StrokeDashOffset" Value="0.5" />
    <Setter Property="Margin" Value="-2" />
  </Style>

  <!-- Rating -->

  <Style TargetType="local:RatingItem">
    <Setter Property="Width" Value="{Binding Height}" />
    <Setter Property="Height" Value="{Binding Height}" />
    <Setter Property="BorderThickness" Value="{Binding BorderThickness}" />
    <Setter Property="Background" Value="{Binding Background}" />
    <Setter Property="Foreground" Value="{Binding Foreground}" />
    <Setter Property="BorderBrush" Value="{Binding BorderBrush}" />
    <Setter Property="Template" Value="{Binding ItemTemplate}" />
  </Style>

  <Style TargetType="local:Rating">
    <Setter Property="BorderThickness" Value="{StaticResource RatingBorderThemeThickness}" />
    <Setter Property="Background" Value="{StaticResource RatingBackroundThemeBrush}" />
    <Setter Property="Foreground" Value="{StaticResource RatingForegroundThemeBrush}" />
    <Setter Property="Highlight" Value="{StaticResource RatingHighlightThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource RatingBorderThemeBrush}" />
    <Setter Property="Height" Value="{StaticResource RatingItemThemeSize}" />
    <Setter Property="ItemCount" Value="{StaticResource RatingThemeItemCount}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Rating">
          <StackPanel x:Name="Items" Orientation="Horizontal" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="local:RatingItem">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="HighlightStates">
                <VisualState x:Name="Highlighted">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="HighightMask" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unhighlighted" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Viewbox>
              <Border Padding="2" Background="Transparent">
                <Border.Resources>
                  <ContentControl x:Key="StarData" Content="M 5.5,0.2 L 4,4 L 0,4 L 3,7 L 2,11 L 5.5,8.6 L 9,11 L 8,7 L 11,4 L 7,4 Z"/>
                  <local:RectMaskConverter x:Key="rc" />
                </Border.Resources>
                <Canvas Width="11" Height="11">
                  <Path 
                    Fill="{Binding Background}" 
                    Stroke="Transparent" 
                    StrokeThickness="{Binding Rating.BorderThickness}"
                    Data="{Binding Source={StaticResource StarData}, Path=Content}" />
                  <Path 
                    Fill="{Binding Rating.Foreground}" 
                    Stroke="Transparent" 
                    StrokeThickness="{Binding Rating.BorderThickness}"
                    Data="{Binding Source={StaticResource StarData}, Path=Content}">
                    <Path.Clip>
                      <RectangleGeometry Rect="{Binding Value, Converter={StaticResource rc}, ConverterParameter=11}" />
                    </Path.Clip>
                  </Path>
                  <Path 
                    Fill="Transparent" 
                    Stroke="{Binding Rating.BorderBrush}" 
                    StrokeThickness="{Binding Rating.BorderThickness}"
                    Data="{Binding Source={StaticResource StarData}, Path=Content}" 
                    StrokeLineJoin="Round"/>
                  <Path 
                    Fill="{Binding Rating.Highlight}" 
                    Stroke="{Binding Rating.Highlight}" 
                    StrokeThickness="{Binding BorderThickness}"
                    Data="{Binding Source={StaticResource StarData}, Path=Content}" 
                    StrokeLineJoin="Round"
                    Visibility="Collapsed"
                    x:Name="HighightMask"/>
                </Canvas>
              </Border>
            </Viewbox>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Color -->

  <Style TargetType="local:ColorList">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Width" Value="470" />
    <Setter Property="Height" Value="320" />
    <Setter Property="ItemSize" Value="60" />
    <Setter Property="Color" Value="White" />
    <Setter Property="StandartColors">
      <Setter.Value>
        <local:ColorObservableCollection>
          <Color>#000000</Color>
          <Color>#7F7F7F</Color>
          <Color>#870014</Color>
          <Color>#EC1B23</Color>
          <Color>#FF7F27</Color>
          <Color>#FEF100</Color>
          <Color>#22B14C</Color>
          <Color>#00A1E7</Color>
          <Color>#414ACE</Color>
          <Color>#A44AA5</Color>
          <Color>#FFFFFF</Color>
          <Color>#C2C2C2</Color>
          <Color>#BA7B58</Color>
          <Color>#FFAFCA</Color>
          <Color>#FFC90E</Color>
          <Color>#EFE4B0</Color>
          <Color>#B4E51C</Color>
          <Color>#99D9EA</Color>
          <Color>#6F91BD</Color>
          <Color>#C8BFE7</Color>
        </local:ColorObservableCollection>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ColorList">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
              <ContentControl x:Key="ItemSize" Content="{TemplateBinding ItemSize}" />
              <ContentControl x:Key="BorderBrush" Content="{TemplateBinding BorderBrush}" />
              <ContentControl x:Key="BorderThickness" Content="{TemplateBinding BorderThickness}" />
            </Border.Resources>
            <ListView 
                ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                ItemsSource="{Binding StandartColors, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                SelectedItem="{Binding Color, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
              <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                  <WrapGrid Orientation="Horizontal" />
                </ItemsPanelTemplate>
              </ListView.ItemsPanel>

              <ListView.ItemTemplate>
                <DataTemplate>
                  <Border Padding="4">
                    <Border 
                        BorderBrush="{Binding Content, Source={StaticResource BorderBrush}}" 
                        BorderThickness="{Binding Content, Source={StaticResource BorderThickness}}">
                      <Rectangle Width="{Binding Source={StaticResource ItemSize}, Path=Content}" Height="{Binding Source={StaticResource ItemSize}, Path=Content}">
                        <Rectangle.Fill>
                          <SolidColorBrush Color="{Binding}" />
                        </Rectangle.Fill>
                      </Rectangle>
                    </Border>
                  </Border>
                </DataTemplate>
              </ListView.ItemTemplate>
            </ListView>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:ColorPlane">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ColorPlane">
          <Grid>
            <Rectangle Fill="{TemplateBinding ColorLine}" Stroke="{StaticResource PerpetuumBorderThemeBrush}"/>
            <Rectangle Fill="{TemplateBinding ColorOverlay}" Stroke="{StaticResource PerpetuumBorderThemeBrush}"/>
            <Canvas>
              <Grid x:Name="Pointer" Height="14" Width="14">
                <Ellipse Stroke="White"/>
                <Ellipse Stroke="Black" Margin="1"/>
              </Grid>
            </Canvas>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:ColorEditor">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ColorEditor">
          <Border x:Name="Border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="Root">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>

              <StackPanel Orientation="Vertical" Margin="0,10,0,0">
                <local:ColorPlane Width="200" Height="200" Margin="10, 0"
                      XValue="{Binding Saturation, Mode=TwoWay}" YValue="{Binding Value, Mode=TwoWay}">
                  <local:ColorPlane.ColorLine>
                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                      <GradientStop Color="White" Offset="0"/>
                      <GradientStop Color="{Binding MaxColor}" Offset="1"/>
                    </LinearGradientBrush>
                  </local:ColorPlane.ColorLine>
                  <local:ColorPlane.ColorOverlay>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Offset="0"/>
                      <GradientStop Color="Black" Offset="1"/>
                    </LinearGradientBrush>
                  </local:ColorPlane.ColorOverlay>
                </local:ColorPlane>

                <local:ColorPlane Width="200" Height="30" Margin="5" XValue="{Binding HueNormalized, Mode=TwoWay}" SupportY="False">
                  <local:ColorPlane.ColorLine>
                    <LinearGradientBrush>
                      <GradientStop Offset="0.00" Color="#ffff0000"/>
                      <GradientStop Offset="0.17" Color="#ffffff00"/>
                      <GradientStop Offset="0.33" Color="#ff00ff00"/>
                      <GradientStop Offset="0.50" Color="#ff00ffff"/>
                      <GradientStop Offset="0.66" Color="#ff0000ff"/>
                      <GradientStop Offset="0.83" Color="#ffff00ff"/>
                      <GradientStop Offset="1.00" Color="#ffff0000"/>
                    </LinearGradientBrush>
                  </local:ColorPlane.ColorLine>
                </local:ColorPlane>
              </StackPanel>

              <StackPanel Orientation="Vertical" Margin="0,10,10,0" Grid.Column="1">
                <Rectangle Width="200" Height="85" Stroke="{StaticResource PerpetuumBorderThemeBrush}">
                  <Rectangle.Fill>
                    <SolidColorBrush Color="{Binding Color}"/>
                  </Rectangle.Fill>
                </Rectangle>

                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                  </Grid.RowDefinitions>
                  <Rectangle Fill="Red" Stroke="Red" Width="30" Height="30" VerticalAlignment="Center" Margin="3" Grid.Row="0"/>
                  <Slider Value="{Binding Red, Mode=TwoWay}" Minimum="0" Maximum="255" Height="45" VerticalAlignment="Center" Margin="3" Grid.Column="1" Grid.Row="0" Padding="2"/>
                  <Rectangle Fill="Green" Stroke="Green" Width="30" Height="30" VerticalAlignment="Center" Margin="3" Grid.Row="1"/>
                  <Slider Value="{Binding Green, Mode=TwoWay}" Minimum="0" Maximum="255" Height="45" VerticalAlignment="Center" Margin="3" Grid.Column="1" Grid.Row="1" Padding="2"/>
                  <Rectangle Fill="Blue" Stroke="Blue" Width="30" Height="30" VerticalAlignment="Center" Margin="3" Grid.Row="2"/>
                  <Slider Value="{Binding Blue, Mode=TwoWay}" Minimum="0" Maximum="255" Height="45" VerticalAlignment="Center" Margin="3" Grid.Column="1" Grid.Row="2" Padding="2"/>
                </Grid>
              </StackPanel>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:ColorPicker">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Width" Value="200" />
    <Setter Property="Height" Value="30" />
    <Setter Property="PopupBrush" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="Color" Value="White" />
    <Setter Property="ColorListItemSize" Value="60" />
    <Setter Property="ColorListStandartColors">
      <Setter.Value>
        <local:ColorObservableCollection>
          <Color>#000000</Color>
          <Color>#7F7F7F</Color>
          <Color>#870014</Color>
          <Color>#EC1B23</Color>
          <Color>#FF7F27</Color>
          <Color>#FEF100</Color>
          <Color>#22B14C</Color>
          <Color>#3BA6F4</Color>
          <Color>#414ACE</Color>
          <Color>#A44AA5</Color>
          <Color>#FFFFFF</Color>
          <Color>#C2C2C2</Color>
          <Color>#BA7B58</Color>
          <Color>#FFAFCA</Color>
          <Color>#FFC90E</Color>
          <Color>#EFE4B0</Color>
          <Color>#B4E51C</Color>
          <Color>#99D9EA</Color>
          <Color>#6F91BD</Color>
          <Color>#C8BFE7</Color>
        </local:ColorObservableCollection>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:ColorPicker">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="32" />
              </Grid.ColumnDefinitions>

              <Rectangle x:Name="FocusVisualWhite" Style="{StaticResource FocusVisualWhiteRectangleThemeStyle}" StrokeDashArray="1,1" Grid.ColumnSpan="2" />
              <Rectangle x:Name="FocusVisualBlack" Style="{StaticResource FocusVisualBlackRectangleThemeStyle}" StrokeDashArray="1,1" Grid.ColumnSpan="2" />

              <Grid Margin="5">
                <Grid.Background>
                  <SolidColorBrush Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid.Background>
              </Grid>

              <TextBlock
                Text="&#57361;"
                Grid.Column="1"
                IsHitTestVisible="False"
                Margin="0,0,6,4"
                Foreground="{StaticResource ComboBoxArrowForegroundThemeBrush}"
                FontWeight="Bold"
                FontSize="{StaticResource ComboBoxArrowThemeFontSize}"
                FontFamily="{StaticResource SymbolThemeFontFamily}"
                HorizontalAlignment="Right"
                VerticalAlignment="Center" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Date & Time -->

  <Style TargetType="local:TimePicker">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="ComboBoxStyle">
      <Setter.Value>
        <Style TargetType="ComboBox">
          <Setter Property="Width" Value="110" />
          <Setter Property="Height" Value="100" />
          <Setter Property="FontFamily" Value="Segoe UI" />
          <Setter Property="BorderBrush" Value="Transparent" />
          <Setter Property="BorderThickness" Value="0" />
          <Setter Property="ItemTemplate">
            <Setter.Value>
              <DataTemplate>
                <Border Width="110" Height="100" Background="Transparent" Padding="10">
                  <Border.Resources>
                    <local:IntegerConverter x:Key="ic" />
                  </Border.Resources>
                  <Viewbox>
                    <TextBlock Text="{Binding Converter={StaticResource ic}, ConverterParameter=2}"/>
                  </Viewbox>
                </Border>
              </DataTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="ComboBox">
                <Grid>
                  <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                      <VisualState x:Name="Normal" />
                      <VisualState x:Name="PointerOver">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Highlight"
                                                                       Storyboard.TargetProperty="Fill">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxSelectedPointerOverBackgroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Pressed">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
                                                                       Storyboard.TargetProperty="Background">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBackgroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
                                                                       Storyboard.TargetProperty="BorderBrush">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBorderThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                          <DoubleAnimation Storyboard.TargetName="PressedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Disabled">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
                                                                       Storyboard.TargetProperty="Background">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBackgroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background"
                                                                       Storyboard.TargetProperty="BorderBrush">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBorderThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledForegroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="FocusStates">
                      <VisualState x:Name="Focused">
                        <Storyboard>
                          <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                          <DoubleAnimation Storyboard.TargetName="Highlight"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxFocusedForegroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="FocusedPressed">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Highlight"
                                                                       Storyboard.TargetProperty="Fill">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedHighlightThemeBrush}" />
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Unfocused" />
                      <VisualState x:Name="PointerFocused" />
                      <VisualState x:Name="FocusedDropDown">
                        <Storyboard>
                          <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                            <DiscreteObjectKeyFrame KeyTime="0">
                              <DiscreteObjectKeyFrame.Value>
                                <Visibility>Visible</Visibility>
                              </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                          </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="DropDownStates">
                      <VisualState x:Name="Opened">
                        <Storyboard>
                          <SplitOpenThemeAnimation
                                          OpenedTargetName="PopupBorder"
                                          ContentTargetName="ScrollViewer"
                                          ClosedTargetName="ContentPresenter"
                                          ContentTranslationOffset="0"
                                          OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}"
                                          OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}"
                                          ClosedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownClosedHeight}" />
                        </Storyboard>
                      </VisualState>
                      <VisualState x:Name="Closed">
                        <Storyboard>
                          <SplitCloseThemeAnimation
                                          OpenedTargetName="PopupBorder"
                                          ContentTargetName="ScrollViewer"
                                          ClosedTargetName="ContentPresenter"
                                          ContentTranslationOffset="40"
                                          OffsetFromCenter="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOffset}"
                                          ContentTranslationDirection="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SelectedItemDirection}"
                                          OpenedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownOpenedHeight}"
                                          ClosedLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DropDownClosedHeight}" />
                        </Storyboard>
                      </VisualState>
                    </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="Background"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                  <Rectangle x:Name="PressedBackground"
                                   Fill="{StaticResource ComboBoxPressedHighlightThemeBrush}"
                                   Margin="{TemplateBinding BorderThickness}"
                                   Opacity="0" />
                  <Border x:Name="HighlightBackground"
                                Grid.ColumnSpan="2"
                                Background="{StaticResource ComboBoxFocusedBackgroundThemeBrush}"
                                BorderBrush="{StaticResource ComboBoxFocusedBorderThemeBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                  <Rectangle x:Name="Highlight"
                                   Fill="{StaticResource ComboBoxSelectedBackgroundThemeBrush}"
                                   Margin="{TemplateBinding BorderThickness}"
                                   Opacity="0" />
                  <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                  <Popup x:Name="Popup">
                    <Border x:Name="PopupBorder"
                                    Background="{StaticResource ComboBoxPopupBackgroundThemeBrush}"
                                    BorderBrush="{StaticResource ComboBoxPopupBorderThemeBrush}"
                                    BorderThickness="{StaticResource ComboBoxPopupBorderThemeThickness}"
                                    HorizontalAlignment="Stretch">
                      <ScrollViewer x:Name="ScrollViewer" Foreground="{StaticResource ComboBoxPopupForegroundThemeBrush}"
                                              VerticalSnapPointsType="OptionalSingle"
                                              VerticalSnapPointsAlignment="Near"
                                              HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                              VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                              IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                              IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                              IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                              BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                              ZoomMode="Disabled">
                        <ItemsPresenter/>
                      </ScrollViewer>
                    </Border>
                  </Popup>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TimePicker">
          <Grid>
            <Grid.Resources>
              <local:IntegerConverter x:Key="ic" />
            </Grid.Resources>
            <Border
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <StackPanel Orientation="Horizontal">
                <ComboBox x:Name="HourComboBox" Style="{TemplateBinding ComboBoxStyle}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" />
                <Border Height="100">
                  <TextBlock Text=":" FontSize="80" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
                <ComboBox x:Name="MinuteComboBox" Style="{TemplateBinding ComboBoxStyle}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" />
              </StackPanel>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:Calendar">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Width" Value="500" />
    <Setter Property="Height" Value="400" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Calendar">
          <Border x:Name="MainBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
              <Style x:Key="BaseListViewStyle" TargetType="ListView">
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
                <Setter Property="RenderTransform">
                  <Setter.Value>
                    <ScaleTransform />
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Key="YearListViewStyle" TargetType="ListView" BasedOn="{StaticResource BaseListViewStyle}">
                <Setter Property="ItemTemplate">
                  <Setter.Value>
                    <DataTemplate>
                      <Grid Width="100" Height="100" x:Name="LayoutGrid">
                        <TextBlock Text="{Binding Path=Date.Year}" FontFamily="Segoe UI" FontSize="26.667" HorizontalAlignment="Center" VerticalAlignment="Center" />
                      </Grid>
                    </DataTemplate>
                  </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                  <Setter.Value>
                    <ItemsPanelTemplate>
                      <WrapGrid Orientation="Horizontal" MaximumRowsOrColumns="5" />
                    </ItemsPanelTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Key="MonthListViewStyle" TargetType="ListView" BasedOn="{StaticResource BaseListViewStyle}">
                <Setter Property="ItemTemplate">
                  <Setter.Value>
                    <DataTemplate>
                      <Grid Width="50" Height="50" Margin="10">
                        <Grid.Resources>
                          <local:DateTimeToMonthNameConverter x:Key="dnc" />
                        </Grid.Resources>
                        <TextBlock Text="{Binding Date, Converter={StaticResource dnc}}" FontFamily="Segoe UI" FontSize="26.667" HorizontalAlignment="Center" VerticalAlignment="Center" />
                      </Grid>
                    </DataTemplate>
                  </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                  <Setter.Value>
                    <ItemsPanelTemplate>
                      <WrapGrid Orientation="Horizontal" MaximumRowsOrColumns="4" />
                    </ItemsPanelTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Key="DayListViewStyle" TargetType="ListView" BasedOn="{StaticResource BaseListViewStyle}">
                <Setter Property="ItemTemplate">
                  <Setter.Value>
                    <DataTemplate>
                      <Grid Width="50" Height="50" Margin="10">
                        <Grid.Resources>
                          <local:BooleanToVisibilityConverter x:Key="ivc" Invert="True"/>
                        </Grid.Resources>
                        <Grid Background="#22FFFFFF" Visibility="{Binding Valid, Converter={StaticResource ivc}}" Margin="-10"/>
                        <TextBlock Text="{Binding Path=Date.Day}" FontFamily="Segoe UI" FontSize="26.667" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                      </Grid>
                    </DataTemplate>
                  </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                  <Setter.Value>
                    <ItemsPanelTemplate>
                      <WrapGrid Orientation="Horizontal" MaximumRowsOrColumns="7" />
                    </ItemsPanelTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Key="DayOfWeekListViewStyle" TargetType="ListView">
                <Setter Property="SelectionMode" Value="None" />
                <Setter Property="ItemTemplate">
                  <Setter.Value>
                    <DataTemplate>
                      <Grid Width="50" Height="50" Margin="10">
                        <TextBlock Text="{Binding}" FontFamily="Segoe UI" FontSize="26.667" HorizontalAlignment="Center" VerticalAlignment="Center" />
                      </Grid>
                    </DataTemplate>
                  </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                  <Setter.Value>
                    <ItemsPanelTemplate>
                      <WrapGrid Orientation="Horizontal" MaximumRowsOrColumns="7" />
                    </ItemsPanelTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style TargetType="SemanticZoom">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />

                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="SemanticZoom">
                      <Grid>
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="SemanticZoomStates">
                            <VisualState x:Name="ZoomInView">
                              <Storyboard>
                                <FadeOutThemeAnimation TargetName="ZoomedOutPresenter" />
                                <FadeInThemeAnimation TargetName="ZoomedInPresenter" />
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="ZoomOutView">
                              <Storyboard>
                                <FadeOutThemeAnimation TargetName="ZoomedInPresenter" />
                                <FadeInThemeAnimation TargetName="ZoomedOutPresenter" />
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                              RenderTransformOrigin="0, 0"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}">
                          <Border.RenderTransform>
                            <CompositeTransform x:Name="ManipulatedElementTransform" />
                          </Border.RenderTransform>
                          <Grid Margin="{TemplateBinding Padding}">
                            <Viewbox Stretch="Fill">
                              <ContentPresenter
                                      x:Name="ZoomedInPresenter"
                                      RenderTransformOrigin="0.5, 0.5"
                                      Visibility="Collapsed"
                                      IsHitTestVisible="False"
                                      Content="{TemplateBinding ZoomedInView}">
                                <ContentPresenter.RenderTransform>
                                  <CompositeTransform x:Name="ZoomedInTransform" />
                                </ContentPresenter.RenderTransform>
                              </ContentPresenter>
                            </Viewbox>
                            <Viewbox Stretch="Fill">
                              <ContentPresenter
                                      x:Name="ZoomedOutPresenter" 
                                      RenderTransformOrigin="0.5, 0.5"
                                      Content="{TemplateBinding ZoomedOutView}"
                                      IsHitTestVisible="False"
                                      Visibility="Collapsed">
                                <ContentPresenter.RenderTransform>
                                  <CompositeTransform x:Name="ZoomedOutTransform" />
                                </ContentPresenter.RenderTransform>
                              </ContentPresenter>
                            </Viewbox>
                          </Grid>
                        </Border>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </Border.Resources>

            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>

              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button x:Name="PrevButton" HorizontalAlignment="Left" VerticalAlignment="Center">
                  <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE112;" FontSize="30"/>
                </Button>
                <Border x:Name="HeaderBorder" Grid.Column="1" HorizontalAlignment="Stretch"  VerticalAlignment="Center" Background="Transparent">
                  <TextBlock x:Name="HeaderBlock" FontSize="56" FontFamily="Segoe UI Light" HorizontalAlignment="Center" />
                </Border>
                <Button x:Name="NextButton" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="2">
                  <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE111;" FontSize="30"/>
                </Button>
              </Grid>

              <Grid Grid.Row="1">
                <Grid>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>

                  <Viewbox>
                    <ListView x:Name="DayOfWeekListView" Style="{StaticResource DayOfWeekListViewStyle}" />
                  </Viewbox>

                  <Viewbox Grid.Row="1" Stretch="Fill">
                    <SemanticZoom x:Name="LowSemanticZoom">
                      <SemanticZoom.ZoomedInView>
                        <ListView x:Name="DayListView" Style="{StaticResource DayListViewStyle}" />
                      </SemanticZoom.ZoomedInView>
                      <SemanticZoom.ZoomedOutView>
                        <local:SemanticZoomViewContainer>
                          <Viewbox>
                            <SemanticZoom x:Name="HighSemanticZoom">
                              <SemanticZoom.ZoomedInView>
                                <ListView x:Name="MonthListView" Style="{StaticResource MonthListViewStyle}" />
                              </SemanticZoom.ZoomedInView>
                              <SemanticZoom.ZoomedOutView>
                                <ListView x:Name="YearListView" Style="{StaticResource YearListViewStyle}" />
                              </SemanticZoom.ZoomedOutView>
                            </SemanticZoom>
                          </Viewbox>
                        </local:SemanticZoomViewContainer>
                      </SemanticZoom.ZoomedOutView>
                    </SemanticZoom>
                  </Viewbox>
                </Grid>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:DatePicker">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Width" Value="200" />
    <Setter Property="Height" Value="30" />
    <Setter Property="Background" Value="#CCFFFFFF" />
    <Setter Property="PopupBrush" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="DateFormat" >
      <Setter.Value>
        {0:d}
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:DatePicker">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="32" />
              </Grid.ColumnDefinitions>

              <Rectangle x:Name="FocusVisualWhite" Style="{StaticResource FocusVisualWhiteRectangleThemeStyle}" StrokeDashArray="1,1" Grid.ColumnSpan="2" />
              <Rectangle x:Name="FocusVisualBlack" Style="{StaticResource FocusVisualBlackRectangleThemeStyle}" StrokeDashArray="1,1" Grid.ColumnSpan="2" />

              <TextBlock 
                Margin="5,0,0,0"
                FontSize="20"
                Foreground="Black"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"              
                Text="{Binding DateString, RelativeSource={RelativeSource TemplatedParent}}"/>

              <TextBlock
                Text="&#57361;"
                Grid.Column="1"
                IsHitTestVisible="False"
                Margin="0,0,6,4"
                Foreground="{StaticResource ComboBoxArrowForegroundThemeBrush}"
                FontWeight="Bold"
                FontSize="{StaticResource ComboBoxArrowThemeFontSize}"
                FontFamily="{StaticResource SymbolThemeFontFamily}"
                HorizontalAlignment="Right"
                VerticalAlignment="Center" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Expander -->

  <Style TargetType="local:Expander">
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Expander">
          <Grid Background="Transparent">
            <Grid.Resources>
              <DataTemplate x:Name="ButtonCollapsedTemplate">
                <Viewbox Width="50" Height="50">
                  <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE095;" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                      <RotateTransform Angle="90" />
                    </TextBlock.RenderTransform>
                  </TextBlock>
                </Viewbox>
              </DataTemplate>
              <DataTemplate x:Name="ButtonExpandedTemplate">
                <Viewbox Width="50" Height="50">
                  <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE095;" RenderTransformOrigin="0.5,0.5">
                    <TextBlock.RenderTransform>
                      <RotateTransform Angle="270" />
                    </TextBlock.RenderTransform>
                  </TextBlock>
                </Viewbox>
              </DataTemplate>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="ExpansionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Collapsed">
                  <Storyboard>
                    <DoubleAnimation 
                      Storyboard.TargetName="ExpandSite" 
                      Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"                                            
                      To="0" 
                      Duration="0:0:0.25"                       
                      />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility" BeginTime="0:0:0.25">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Expanded">
                  <Storyboard>
                    <DoubleAnimation 
                      Storyboard.TargetName="ExpandSite" 
                      Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"                                            
                      To="1" 
                      Duration="0:0:0.25"                       
                      />
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Button" Storyboard.TargetProperty="ContentTemplate">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonExpandedTemplate}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="FocusStates">
                <VisualState x:Name="Focused">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Border Padding="{TemplateBinding Padding}" x:Name="ExpanderBlock">
                  <Grid Background="Transparent">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <ContentPresenter ContentTemplate="{StaticResource ButtonCollapsedTemplate}" x:Name="Button" />
                    <Rectangle x:Name="FocusVisualWhite" Style="{StaticResource FocusVisualWhiteRectangleThemeStyle}" StrokeDashArray="1,1" Margin="1" />
                    <Rectangle x:Name="FocusVisualBlack" Style="{StaticResource FocusVisualBlackRectangleThemeStyle}" StrokeDashArray="1,1" Margin="1"/>

                    <ContentPresenter Content="{TemplateBinding Header}" Grid.Column="1" HorizontalAlignment="Stretch" Margin="4,0,0,0" VerticalAlignment="Center"/>
                  </Grid>
                </Border>
                <Border
                    x:Name="ExpandSite"
                    Grid.Row="1"
                    Visibility="Collapsed">
                  <Border.RenderTransform>
                    <ScaleTransform ScaleY="0" />
                  </Border.RenderTransform>
                  <ContentControl                                     
                      Content="{TemplateBinding Content}" 
                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                      FontFamily="{TemplateBinding FontFamily}" 
                      FontSize="{TemplateBinding FontSize}" 
                      FontStretch="{TemplateBinding FontStretch}" 
                      FontStyle="{TemplateBinding FontStyle}" 
                      FontWeight="{TemplateBinding FontWeight}" 
                      Foreground="{TemplateBinding Foreground}" 
                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                      VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                      Margin="{TemplateBinding Padding}">
                  </ContentControl>
                </Border>
              </Grid>
            </Border>
            <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Background="#A5FFFFFF" CornerRadius="3" Grid.RowSpan="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Layout -->

  <Style TargetType="local:Flyout">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="PopupMargin" Value="0,12,0,12" />
    <Setter Property="MinHeight" Value="54" />
    <Setter Property="MinWidth" Value="70" />
    <Setter Property="MaxHeight" Value="758" />
    <Setter Property="MaxWidth" Value="510" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:Flyout">
          <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="2" Margin="{TemplateBinding PopupMargin}">
            <ContentPresenter Content="{TemplateBinding Content}" Margin="{TemplateBinding Margin}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- TextBoxes -->

  <Style TargetType="local:NumericUpDown">
    <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}" />
    <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}" />
    <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}" />
    <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
    <Setter Property="Minimum" Value="0" />
    <Setter Property="Maximum" Value="100" />
    <Setter Property="Increment" Value="1" />
    <Setter Property="Value" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Control">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <local:MaskedTextBox 
                     x:Name="TextBox" 
                     Background="{TemplateBinding Background}"
                     Foreground="{TemplateBinding Foreground}" 
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     FontFamily="{TemplateBinding FontFamily}"
                     FontStyle="{TemplateBinding FontStyle}"
                     FontSize="{TemplateBinding FontSize}"
                     FontStretch="{TemplateBinding FontStretch}"
                     FontWeight="{TemplateBinding FontWeight}"
                     Padding="{TemplateBinding Padding}"
                     Margin="5" />
            <Button x:Name="DecButton" Grid.Column="1">
              <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE102;" RenderTransformOrigin="0.5,0.5">
                <TextBlock.RenderTransform>
                  <RotateTransform Angle="90"/>
                </TextBlock.RenderTransform>
              </TextBlock>
            </Button>
            <Button x:Name="IncButton"  Grid.Column="2">
              <TextBlock FontFamily="{StaticResource SymbolThemeFontFamily}" Text="&#xE102;" RenderTransformOrigin="0.5,0.5">
                <TextBlock.RenderTransform>
                  <RotateTransform Angle="270"/>
                </TextBlock.RenderTransform>
              </TextBlock>
            </Button>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:TextBoxButton">
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:TextBoxButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                                                               Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                                                                               Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement"
                                                                                               Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverForegroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                                                               Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                                                                               Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement"
                                                                                               Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedForegroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BackgroundElement"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0"
                                                                                 Duration="0" />
                    <DoubleAnimation Storyboard.TargetName="BorderElement"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 To="0"
                                                                                 Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="BorderElement"
                                                        BorderBrush="{StaticResource TextBoxButtonBorderThemeBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"/>
            <Border x:Name="BackgroundElement"
                                                        Background="{StaticResource TextBoxButtonBackgroundThemeBrush}"
                                                        Margin="{TemplateBinding BorderThickness}">
              <TextBlock x:Name="GlyphElement"
                                                               Foreground="{StaticResource TextBoxButtonForegroundThemeBrush}"
                                                               VerticalAlignment="Center"
                                                               HorizontalAlignment="Center"
                                                               Text="{TemplateBinding Text}"
                                                               FontFamily="{StaticResource SymbolThemeFontFamily}"/>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:MaskedTextBox">
    <Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}" />
    <Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}" />
    <Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}" />
    <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}" />
    <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
    <Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
    <Setter Property="ShowDeleteButton" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:MaskedTextBox">
          <Grid>
            <Grid.Resources>
              <local:BooleanToVisibilityConverter x:Key="bvc" />
              <local:MaskedTextBoxItemsConverter x:Key="avc" />
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundElement"
                                                                       Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBackgroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement"
                                                                       Storyboard.TargetProperty="BorderBrush">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBorderThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement"
                                                                       Storyboard.TargetProperty="Foreground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledForegroundThemeBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BackgroundElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="{StaticResource TextControlBackgroundThemeOpacity}" />
                    <DoubleAnimation Storyboard.TargetName="BorderElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="{StaticResource TextControlBorderThemeOpacity}" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PointerOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BackgroundElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="{StaticResource TextControlPointerOverBackgroundThemeOpacity}" />
                    <DoubleAnimation Storyboard.TargetName="BorderElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0"
                                                         To="{StaticResource TextControlPointerOverBorderThemeOpacity}" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Focused" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="ButtonStates">
                <VisualState x:Name="ButtonVisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightItemsLeftPanel" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightItemsRightPanel" Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="ButtonCollapsed" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Border x:Name="BackgroundElement"
                                Background="{TemplateBinding Background}"
                                Margin="{TemplateBinding BorderThickness}"
                                Grid.ColumnSpan="3"/>
            <Border x:Name="BorderElement"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.ColumnSpan="3"/>
            <ScrollViewer x:Name="ContentElement" Grid.Column="1"
                                      HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                      IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                      Margin="{TemplateBinding BorderThickness}"
                                      Padding="{TemplateBinding Padding}"
                                      IsTabStop="False"
                                      ZoomMode="Disabled" />

            <StackPanel Orientation="Horizontal" Grid.Column="0" Margin="4">
              <StackPanel x:Name="PermanentlyItemsLeftPanel" Orientation="Horizontal">
                <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource avc}, ConverterParameter='LeftPermanently'}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </StackPanel>
              <StackPanel x:Name="HighlightItemsLeftPanel" Orientation="Horizontal" Visibility="Collapsed">
                <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource avc}, ConverterParameter='LeftHighlight'}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </StackPanel>
            </StackPanel>


            <StackPanel Orientation="Horizontal" Grid.Column="2" Margin="4">
              <StackPanel x:Name="HighlightItemsRightPanel" Orientation="Horizontal" Visibility="Collapsed">
                <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource avc}, ConverterParameter='RightHighlight'}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
                <Border Visibility="{Binding ShowDeleteButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource bvc}}" >
                  <local:TextBoxButton x:Name="DeleteButton" BorderThickness="{TemplateBinding BorderThickness}" FontSize="{TemplateBinding FontSize}" Text="&#xE0A4;"/>
                </Border>
              </StackPanel>
              <StackPanel x:Name="PermanentlyItemsRightPanel" Orientation="Horizontal">
                <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource avc}, ConverterParameter='RightPermanently'}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </StackPanel>
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:PlainMenuHost">
    <Setter Property="Width" Value="300" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PlainMenuHost">
          <Border>
            <Border.Resources>
              <local:BooleanToVisibilityConverter x:Key="bc" />
            </Border.Resources>
            <Border
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
              <Grid Name="SubmenuList" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                  <CompositeTransform />
                </Grid.RenderTransform>
              </Grid>
            </Border>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:PlainMenu">
    <Setter Property="Foreground" Value="{StaticResource PerpetuumForegroundThemeBrush}" />
    <Setter Property="Background" Value="{StaticResource PerpetuumBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource PerpetuumBorderThemeBrush}" />
    <Setter Property="BorderThickness" Value="{StaticResource PerpetuumBorderThemeThickness}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PlainMenu">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Border.Resources>
              <local:ExistToVisibilityConverter x:Key="ec" />
              <Storyboard x:Name="StoryboardOpen">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="ItemsContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Name="StoryboardClose">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="ItemsContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Border.Resources>
            <Grid>
              <Grid x:Name="ItemsContainer" RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                  <ScaleTransform />
                </Grid.RenderTransform>
                <StackPanel>
                  <TextBlock HorizontalAlignment="Center" FontSize="20" Text="{TemplateBinding Caption}" Visibility="{Binding Caption, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ec}}" Margin="0,5,0,0"/>
                  <local:PlainItem x:Name="BackItem" Label="&#xE0A6;" FontFamily="{StaticResource SymbolThemeFontFamily}" FontSize="40" Style="{TemplateBinding BackItemStyle}"/>
                  <ItemsControl ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel />
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                </StackPanel>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:PlainItem" x:Key="DefaultPlainItemStyle">
    <Setter Property="Height" Value="40" />
    <Setter Property="Width" Value="300" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="FontFamily" Value="Segoe UI" />
    <Setter Property="Background" Value="{StaticResource ApplicationPageBackgroundThemeBrush}" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PlainItem">
          <Grid>
            <Grid.Resources>
              <local:EqualToVisibilityConverter x:Key="ec" />
              <local:BooleanToVisibilityConverter x:Key="bc" />
              <local:HighlightBrushConverter x:Key="hc" />
              <Style TargetType="Viewbox">
                <Setter Property="Width" Value="20" />
                <Setter Property="Height" Value="20" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
              </Style>
            </Grid.Resources>
            <Border>
              <Button x:Name="Button" HorizontalAlignment="Stretch" Padding="0" IsEnabled="{TemplateBinding IsEnabled}" Margin="2,2,5,2"
                      Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Button.Template>
                  <ControlTemplate TargetType="Button">
                    <Grid>
                      <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                          <VisualState x:Name="Normal" />
                          <VisualState x:Name="PointerOver">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource hc}, ConverterParameter=0.3}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPointerOverForegroundThemeBrush}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Pressed">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RepeatButtonPressedBackgroundThemeBrush}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Disabled">
                            <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundThemeBrush}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBorderThemeBrush}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
                                                                       Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}" />
                              </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                          </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                          <VisualState x:Name="Focused">
                            <Storyboard>
                              <DoubleAnimation Storyboard.TargetName="FocusVisualWhite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                              <DoubleAnimation Storyboard.TargetName="FocusVisualBlack"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                            </Storyboard>
                          </VisualState>
                          <VisualState x:Name="Unfocused" />
                          <VisualState x:Name="PointerFocused" />
                        </VisualStateGroup>
                      </VisualStateManager.VisualStateGroups>
                      <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="3">
                        <ContentPresenter x:Name="ContentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                      </Border>
                      <Rectangle x:Name="FocusVisualWhite"
                                   IsHitTestVisible="False"
                                   Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
                                   StrokeEndLineCap="Square"
                                   StrokeDashArray="1,1"
                                   Opacity="0"
                                   StrokeDashOffset="1.5" />
                      <Rectangle x:Name="FocusVisualBlack"
                                   IsHitTestVisible="False"
                                   Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
                                   StrokeEndLineCap="Square"
                                   StrokeDashArray="1,1"
                                   Opacity="0"
                                   StrokeDashOffset="0.5" />
                    </Grid>
                  </ControlTemplate>
                </Button.Template>

                <Grid Width="285">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="40" />
                  </Grid.ColumnDefinitions>

                  <Grid Grid.Column="0" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource bc}}">
                    <Viewbox>
                      <TextBlock Text="&#xE10B;" FontFamily="{StaticResource SymbolThemeFontFamily}" Visibility="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ec}, ConverterParameter=None}" />
                    </Viewbox>
                    <Viewbox>
                      <TextBlock Text="&#xE10B;" FontFamily="{StaticResource SymbolThemeFontFamily}" Visibility="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ec}, ConverterParameter=CheckBox}" />
                    </Viewbox>
                    <Viewbox>
                      <TextBlock Text="&#xE236;" FontFamily="{StaticResource SymbolThemeFontFamily}" Visibility="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ec}, ConverterParameter=RadioButton}"/>
                    </Viewbox>
                  </Grid>

                  <Grid Grid.Column="1">
                    <TextBlock 
                      Text="{TemplateBinding Label}" 
                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalAlignment}"                               
                      FontSize="{TemplateBinding FontSize}"                                
                      FontFamily="{TemplateBinding FontFamily}" 
                      FontStretch="{TemplateBinding FontStretch}" 
                      FontStyle="{TemplateBinding FontStyle}" 
                      FontWeight="{TemplateBinding FontWeight}" />

                    <Image Source="{TemplateBinding Image}" Width="20" Height="20" Stretch="Uniform" HorizontalAlignment="Right" />
                  </Grid>


                  <Grid Grid.Column="2">
                    <Viewbox>
                      <TextBlock Text="&#xE102;" FontFamily="{StaticResource SymbolThemeFontFamily}" Visibility="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ec}, ConverterParameter=Submenu}"/>
                    </Viewbox>
                  </Grid>
                </Grid>
              </Button>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:PlainItem" BasedOn="{StaticResource DefaultPlainItemStyle}" />

  <Style TargetType="local:PlainItemSeparator" BasedOn="{StaticResource DefaultPlainItemStyle}">
    <Setter Property="Mode" Value="None" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Height" Value="10" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:PlainItemSeparator">
          <Border Padding="4">
            <Rectangle Fill="{StaticResource PerpetuumBorderThemeBrush}" Width="250" HorizontalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:RadialMenu">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RadialMenu">
          <Grid x:Name="LayoutRoot" Height="266" Width="266" FlowDirection="LeftToRight" RenderTransformOrigin="0.5,0.5">
            <Grid.Resources>
              <Style x:Key="ButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="26" />
                <Setter Property="Height" Value="24" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="RenderTransform">
                  <Setter.Value>
                    <CompositeTransform />
                  </Setter.Value>
                </Setter>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Grid MinWidth="0" Width="26" Height="24" Visibility="{Binding Visibility}">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                              <Storyboard>
                                <DoubleAnimation Duration="0:0:0.15" To="1"  Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.Opacity)" />
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Duration="0:0:0.15" To="0.3"  Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.Opacity)" />
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid MinWidth="0" Width="26" Height="24" x:Name="Icon">
                          <Image x:Name="Image" Height="19" Width="20" Stretch="Uniform" IsHitTestVisible="false" HorizontalAlignment="Center" VerticalAlignment="Top" Source="{Binding Image, Mode=OneWay}" />
                          <Border Background="#88FFFFFF" BorderThickness="0" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,3,0,0" Visibility="Visible" >
                            <TextBlock Foreground="#FF707070" FontFamily="Segoe UI Semilight" FontSize="8" Text="{Binding ValueText}" />
                          </Border>
                          <Rectangle Height="5" Width="20" Margin="0,0,0,2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Visibility="Visible" Fill="{Binding ValueBrush}" />
                        </Grid>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Key="LabelStyle" TargetType="Button">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      <Grid Visibility="{Binding Visibility}" HorizontalAlignment="{Binding HorizontalAlignment}" VerticalAlignment="{Binding VerticalAlignment}">
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                              <Storyboard>
                                <DoubleAnimation Duration="0:0:0.15" To="1"  Storyboard.TargetName="textLabel" Storyboard.TargetProperty="(UIElement.Opacity)" />
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                              <Storyboard>
                                <DoubleAnimation Duration="0:0:0.15" To="0.3"  Storyboard.TargetName="textLabel" Storyboard.TargetProperty="(UIElement.Opacity)" />
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="textLabel" Text="{Binding Label, Mode=OneWay}" Foreground="#FF707070" FontFamily="Segoe UI Semilight" FontSize="10" Height="28" Width="47" TextWrapping="Wrap" TextAlignment="Center" />
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Key="ArcStyle" TargetType="Image">
                <Setter Property="Stretch" Value="None" />
              </Style>
              <Style x:Key="BodyHoverStyle" TargetType="Path">
                <Setter Property="StrokeThickness" Value="2" />
                <Setter Property="StrokeStartLineCap" Value="Flat" />
                <Setter Property="StrokeEndLineCap" Value="Flat" />
                <Setter Property="StrokeMiterLimit" Value="10" />
                <Setter Property="StrokeLineJoin" Value="Miter" />
                <Setter Property="Stretch" Value="Fill" />
                <Setter Property="Opacity" Value="0" />
              </Style>
              <Style x:Key="SelectedStyle" TargetType="Path">
                <Setter Property="StrokeThickness" Value="1" />
                <Setter Property="StrokeStartLineCap" Value="Flat" />
                <Setter Property="StrokeEndLineCap" Value="Flat" />
                <Setter Property="StrokeMiterLimit" Value="10" />
                <Setter Property="StrokeLineJoin" Value="Miter" />
                <Setter Property="Stretch" Value="Fill" />
              </Style>
              <Style x:Key="SubmenuStyle" TargetType="Path">
                <Setter Property="StrokeThickness" Value="0" />
                <Setter Property="Stretch" Value="Fill" />
                <Setter Property="UseLayoutRounding" Value="false" />
                <Setter Property="Stretch" Value="Fill" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Fill" >
                  <Setter.Value>
                    <SolidColorBrush />
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Key="SubmenuHoverStyle" TargetType="Path" BasedOn="{StaticResource SubmenuStyle}">
                <Setter Property="Opacity" Value="0" />
              </Style>
              <Style x:Key="BodyStyle" TargetType="Path">
                <Setter Property="StrokeThickness" Value="1" />
                <Setter Property="StrokeStartLineCap" Value="Flat" />
                <Setter Property="StrokeEndLineCap" Value="Flat" />
                <Setter Property="StrokeMiterLimit" Value="10" />
                <Setter Property="StrokeLineJoin" Value="Miter" />
                <Setter Property="Stretch" Value="Fill" />
              </Style>
              <DataTemplate x:Key="ArrowTemplate">
                <Border Width="12" Height="12">
                  <Path Data="M 0,9 L 6,3 L 12,9 L 0,9 Z" Fill="{Binding BodyBrush}" Stroke="Transparent"/>
                </Border>
              </DataTemplate>
              <Storyboard x:Name="StoryboardRootOpen">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="LayoutRoot">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="LayoutRoot">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0" Value="-45">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-45">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="-34.5048"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.217" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.267" Value="0.5"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.5">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.749939">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="0.80826"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.217" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.267" Value="1.01"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.5">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.749939">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="0.80826"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.217" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.267" Value="1.01"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="0.233228"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.217" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="BodyBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.75">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.925899"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.217" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="BodyBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.75">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.925899"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.217" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BodyBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="-45">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-13.3382"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.217" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.75">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.925899"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.217" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.75">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.925899"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.217" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Name="StoryboardRootClose">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.5"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.183" Value="-34.5048"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-45">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1.01"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.183" Value="0.80826"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.749939">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1.01"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.183" Value="0.80826"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.749939">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.183" Value="0.233228"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="BodyBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.925899"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.75">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="BodyBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.925899"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.75">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BodyBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-13.3382"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-45">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.925899"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.75">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.925899"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.75">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Name="StoryboardShowSubmenu">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="LayoutRoot">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="LayoutRoot">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.283" Value="0.75"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.367" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.283" Value="0.75"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.367" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.283" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.367" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="BodyBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.283" Value="0.9"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.367" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="BodyBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.283" Value="0.9"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.367" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BodyBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.217" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.778146"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.778146"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Name="StoryboardHideSubmenu">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.033" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="0.75"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.033" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="0.75"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ActionContainer">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.033" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="BodyBlock">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.033" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="0.9"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="BodyBlock">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.033" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="0.9"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BodyBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.233" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.233" Value="0.778146"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.233" Value="0.778146"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Ring">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.233" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Name="StoryboardShowLabels" BeginTime="0:0:0.4">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LabelContainer">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.17" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimation Duration="0:0:0.25" To="-14" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button0" />
                <DoubleAnimation Duration="0:0:0.25" To="-18" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button1" />
                <DoubleAnimation Duration="0:0:0.25" To="-1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Button1" />
                <DoubleAnimation Duration="0:0:0.25" To="-9" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button2" />
                <DoubleAnimation Duration="0:0:0.25" To="-9" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button3" />
                <DoubleAnimation Duration="0:0:0.25" To="-7" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button4" />
                <DoubleAnimation Duration="0:0:0.25" To="-9" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button5" />
                <DoubleAnimation Duration="0:0:0.25" To="-9" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button6" />
                <DoubleAnimation Duration="0:0:0.25" To="1" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Button7" />
                <DoubleAnimation Duration="0:0:0.25" To="-18" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button7" />
              </Storyboard>
              <Storyboard x:Name="StoryboardHideLabels">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LabelContainer">
                  <EasingDoubleKeyFrame KeyTime="0:0:0.17" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimation Duration="0:0:0.25" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button0" />
                <DoubleAnimation Duration="0:0:0.25" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button1" />
                <DoubleAnimation Duration="0:0:0.25" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Button1" />
                <DoubleAnimation Duration="0:0:0.25" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button2" />
                <DoubleAnimation Duration="0:0:0.25" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button3" />
                <DoubleAnimation Duration="0:0:0.25" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button4" />
                <DoubleAnimation Duration="0:0:0.25" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button5" />
                <DoubleAnimation Duration="0:0:0.25" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button6" />
                <DoubleAnimation Duration="0:0:0.25" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="Button7" />
                <DoubleAnimation Duration="0:0:0.25" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="Button7" />
              </Storyboard>
              <Storyboard x:Name="StoryboardScaleIn">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="LayoutRoot">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0.5"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="LayoutRoot">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0.5"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Name="StoryboardScaleOut">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="LayoutRoot">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="LayoutRoot">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>

            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="HoverStates">
                <VisualState x:Name="HoverNone" />
                <VisualState x:Name="HoverBody0">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="BodyHover0" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverBody1">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="BodyHover1" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverBody2">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="BodyHover2" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverBody3">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="BodyHover3" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverBody4">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="BodyHover4" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverBody5">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="BodyHover5" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverBody6">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="BodyHover6" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverBody7">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="BodyHover7" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverRing0">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="0"  Storyboard.TargetName="Submenu0" Storyboard.TargetProperty="(UIElement.Opacity)" />
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="SubmenuHover0" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverRing1">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="0"  Storyboard.TargetName="Submenu1" Storyboard.TargetProperty="(UIElement.Opacity)" />
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="SubmenuHover1" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverRing2">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="0"  Storyboard.TargetName="Submenu2" Storyboard.TargetProperty="(UIElement.Opacity)" />
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="SubmenuHover2" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverRing3">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="0"  Storyboard.TargetName="Submenu3" Storyboard.TargetProperty="(UIElement.Opacity)" />
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="SubmenuHover3" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverRing4">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="0"  Storyboard.TargetName="Submenu4" Storyboard.TargetProperty="(UIElement.Opacity)" />
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="SubmenuHover4" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverRing5">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="0"  Storyboard.TargetName="Submenu5" Storyboard.TargetProperty="(UIElement.Opacity)" />
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="SubmenuHover5" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverRing6">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="0"  Storyboard.TargetName="Submenu6" Storyboard.TargetProperty="(UIElement.Opacity)" />
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="SubmenuHover6" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverRing7">
                  <Storyboard>
                    <Storyboard>
                      <DoubleAnimation Duration="0:0:0.1" To="0"  Storyboard.TargetName="Submenu7" Storyboard.TargetProperty="(UIElement.Opacity)" />
                      <DoubleAnimation Duration="0:0:0.1" To="1"  Storyboard.TargetName="SubmenuHover7" Storyboard.TargetProperty="(UIElement.Opacity)" />
                    </Storyboard>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Grid.RenderTransform>
              <ScaleTransform />
            </Grid.RenderTransform>

            <Grid Name="Ring" Width="266" Height="266" RenderTransformOrigin="0.5,0.5">
              <Grid.RenderTransform>
                <CompositeTransform />
              </Grid.RenderTransform>
              <Viewbox Margin="6,7,10,8" >
                <Canvas Width="225" Height="224">
                  <!-- SubmenuActive -->
                  <Path x:Name="Submenu0" Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item0.RingActiveBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item0.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="91.913" Height="30.628" Canvas.Left="66.937" Canvas.Top="-6.6" Data="F1 M69.41317,12.226604 L77.648468,30.470997 C88.956665,25.846195 99.90509,24.415724 111.21309,24.415724 C122.52209,24.415724 132.6068,25.906212 143.91679,30.530012 L152.21817,11.720171 C139.53317,6.5268712 124.046,2.9354763 111.373,2.9354763 C98.696098,2.9354763 82.098068,7.0323024 69.41317,12.226604 z" />
                  <Path x:Name="Submenu1" Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item1.RingActiveBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item1.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="71.666" Height="72.756" Canvas.Left="149.734" Canvas.Top="3.3"  Data="F1 M144.00598,30.618942 C166.53499,40.068943 181.33624,54.872723 190.79024,77.403824 L208.57227,69.69532 C197.97926,44.418133 177.35776,22.443491 152.08376,11.854589 L144.00598,30.618942 z" />
                  <Path x:Name="Submenu2" Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item2.RingActiveBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item2.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="28.352" Height="90.029" Canvas.Left="201.663" Canvas.Top="67.612" Data="F1 M190.96922,144.14766 L208.57137,150.90529 C218.95335,125.5423 218.90343,95.156754 208.52043,69.797256 L190.78975,77.404129 C200.03374,100.01773 200.21321,121.52866 190.96922,144.14766 z" />
                  <Path x:Name="Submenu3" Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item3.RingActiveBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item3.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="71.423" Height="70.36" Canvas.Left="149.977" Canvas.Top="150.14" Data="F1 M144.22633,190.84468 L151.54428,207.5378 C176.82228,196.94479 197.98187,176.18625 208.57088,150.91225 L190.94542,144.14603 C181.49341,166.67603 165.42511,182.10512 144.22633,190.84468 z" />
                  <Path x:Name="Submenu4" Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item4.RingActiveBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item4.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="90.15" Height="28.039" Canvas.Left="67.95" Canvas.Top="201.761" Data="F1 M70.325226,207.40042 C83.009224,212.59343 98.326828,215.91385 111.00163,215.91385 C123.67663,215.91385 138.85791,212.72881 151.54291,207.53581 L144.17683,190.84399 C132.86983,195.467 122.57102,198.14206 111.26102,198.14206 C99.953033,198.14206 88.926285,195.27675 77.615288,190.65375 L70.325226,207.40042 z" />
                  <Path x:Name="Submenu5" Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item5.RingActiveBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item5.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="71.193" Height="70.245" Canvas.Left="4.8" Canvas.Top="150.086" Data="F1 M13.431252,150.77827 C24.023851,176.05527 45.036846,196.79665 70.311249,207.38565 L77.569962,190.6545 C55.04356,181.2025 40.840569,166.63167 31.383965,144.09868 L13.431252,150.77827 z" />
                  <Path x:Name="Submenu6" Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item6.RingActiveBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item6.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="29.095" Height="90" Canvas.Left="-4.368" Canvas.Top="67.5" Data="F1 M12.484962,69.695023 C2.1020899,95.057419 3.0821292,125.41771 13.465001,150.77872 L31.385244,144.12247 C22.139343,121.51044 21.425543,100.20227 30.671444,77.582176 L12.484962,69.695023 z" />
                  <Path x:Name="Submenu7" Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item7.RingActiveBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item7.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="72.349" Height="72.487" Canvas.Left="3.713" Canvas.Top="3.75" Data="F1 M12.451208,69.763016 L30.660728,77.567467 C40.110825,55.040066 55.102123,39.985176 77.632324,30.529577 L69.378029,12.260092 C44.099834,22.852791 23.040207,44.488609 12.451208,69.763016 z" />
                  <!-- SubmenuHover -->
                  <Path x:Name="SubmenuHover0" Style="{StaticResource SubmenuHoverStyle}" Fill="{Binding Model.Item0.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item0.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="91.913" Height="30.628" Canvas.Left="66.937" Canvas.Top="-6.6" Data="F1 M69.41317,12.226604 L77.648468,30.470997 C88.956665,25.846195 99.90509,24.415724 111.21309,24.415724 C122.52209,24.415724 132.6068,25.906212 143.91679,30.530012 L152.21817,11.720171 C139.53317,6.5268712 124.046,2.9354763 111.373,2.9354763 C98.696098,2.9354763 82.098068,7.0323024 69.41317,12.226604 z" />
                  <Path x:Name="SubmenuHover1" Style="{StaticResource SubmenuHoverStyle}" Fill="{Binding Model.Item1.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item1.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="71.666" Height="72.756" Canvas.Left="149.734" Canvas.Top="3.3"  Data="F1 M144.00598,30.618942 C166.53499,40.068943 181.33624,54.872723 190.79024,77.403824 L208.57227,69.69532 C197.97926,44.418133 177.35776,22.443491 152.08376,11.854589 L144.00598,30.618942 z" />
                  <Path x:Name="SubmenuHover2" Style="{StaticResource SubmenuHoverStyle}" Fill="{Binding Model.Item2.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item2.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="28.352" Height="90.029" Canvas.Left="201.663" Canvas.Top="67.612" Data="F1 M190.96922,144.14766 L208.57137,150.90529 C218.95335,125.5423 218.90343,95.156754 208.52043,69.797256 L190.78975,77.404129 C200.03374,100.01773 200.21321,121.52866 190.96922,144.14766 z" />
                  <Path x:Name="SubmenuHover3" Style="{StaticResource SubmenuHoverStyle}" Fill="{Binding Model.Item3.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item3.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="71.423" Height="70.36" Canvas.Left="149.977" Canvas.Top="150.14" Data="F1 M144.22633,190.84468 L151.54428,207.5378 C176.82228,196.94479 197.98187,176.18625 208.57088,150.91225 L190.94542,144.14603 C181.49341,166.67603 165.42511,182.10512 144.22633,190.84468 z" />
                  <Path x:Name="SubmenuHover4" Style="{StaticResource SubmenuHoverStyle}" Fill="{Binding Model.Item4.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item4.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="90.15" Height="28.039" Canvas.Left="67.95" Canvas.Top="201.761" Data="F1 M70.325226,207.40042 C83.009224,212.59343 98.326828,215.91385 111.00163,215.91385 C123.67663,215.91385 138.85791,212.72881 151.54291,207.53581 L144.17683,190.84399 C132.86983,195.467 122.57102,198.14206 111.26102,198.14206 C99.953033,198.14206 88.926285,195.27675 77.615288,190.65375 L70.325226,207.40042 z" />
                  <Path x:Name="SubmenuHover5" Style="{StaticResource SubmenuHoverStyle}" Fill="{Binding Model.Item5.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item5.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="71.193" Height="70.245" Canvas.Left="4.8" Canvas.Top="150.086" Data="F1 M13.431252,150.77827 C24.023851,176.05527 45.036846,196.79665 70.311249,207.38565 L77.569962,190.6545 C55.04356,181.2025 40.840569,166.63167 31.383965,144.09868 L13.431252,150.77827 z" />
                  <Path x:Name="SubmenuHover6" Style="{StaticResource SubmenuHoverStyle}" Fill="{Binding Model.Item6.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item6.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="29.095" Height="90" Canvas.Left="-4.368" Canvas.Top="67.5" Data="F1 M12.484962,69.695023 C2.1020899,95.057419 3.0821292,125.41771 13.465001,150.77872 L31.385244,144.12247 C22.139343,121.51044 21.425543,100.20227 30.671444,77.582176 L12.484962,69.695023 z" />
                  <Path x:Name="SubmenuHover7" Style="{StaticResource SubmenuHoverStyle}" Fill="{Binding Model.Item7.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item7.SubmenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="72.349" Height="72.487" Canvas.Left="3.713" Canvas.Top="3.75" Data="F1 M12.451208,69.763016 L30.660728,77.567467 C40.110825,55.040066 55.102123,39.985176 77.632324,30.529577 L69.378029,12.260092 C44.099834,22.852791 23.040207,44.488609 12.451208,69.763016 z" />
                  <!-- SubmenuContinues -->
                  <Path Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item0.BodyBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item0.ContinuesVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="91.913" Height="30.628" Canvas.Left="66.937" Canvas.Top="-6.6" Data="F1 M69.41317,12.226604 L77.648468,30.470997 C88.956665,25.846195 99.90509,24.415724 111.21309,24.415724 C122.52209,24.415724 132.6068,25.906212 143.91679,30.530012 L152.21817,11.720171 C139.53317,6.5268712 124.046,2.9354763 111.373,2.9354763 C98.696098,2.9354763 82.098068,7.0323024 69.41317,12.226604 z" />
                  <Path Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item1.BodyBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item1.ContinuesVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="71.666" Height="72.756" Canvas.Left="149.734" Canvas.Top="3.3"  Data="F1 M144.00598,30.618942 C166.53499,40.068943 181.33624,54.872723 190.79024,77.403824 L208.57227,69.69532 C197.97926,44.418133 177.35776,22.443491 152.08376,11.854589 L144.00598,30.618942 z" />
                  <Path Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item2.BodyBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item2.ContinuesVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="28.352" Height="90.029" Canvas.Left="201.663" Canvas.Top="67.612" Data="F1 M190.96922,144.14766 L208.57137,150.90529 C218.95335,125.5423 218.90343,95.156754 208.52043,69.797256 L190.78975,77.404129 C200.03374,100.01773 200.21321,121.52866 190.96922,144.14766 z" />
                  <Path Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item3.BodyBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item3.ContinuesVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="71.423" Height="70.36" Canvas.Left="149.977" Canvas.Top="150.14" Data="F1 M144.22633,190.84468 L151.54428,207.5378 C176.82228,196.94479 197.98187,176.18625 208.57088,150.91225 L190.94542,144.14603 C181.49341,166.67603 165.42511,182.10512 144.22633,190.84468 z" />
                  <Path Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item4.BodyBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item4.ContinuesVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="90.15" Height="28.039" Canvas.Left="67.95" Canvas.Top="201.761" Data="F1 M70.325226,207.40042 C83.009224,212.59343 98.326828,215.91385 111.00163,215.91385 C123.67663,215.91385 138.85791,212.72881 151.54291,207.53581 L144.17683,190.84399 C132.86983,195.467 122.57102,198.14206 111.26102,198.14206 C99.953033,198.14206 88.926285,195.27675 77.615288,190.65375 L70.325226,207.40042 z" />
                  <Path Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item5.BodyBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item5.ContinuesVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="71.193" Height="70.245" Canvas.Left="4.8" Canvas.Top="150.086" Data="F1 M13.431252,150.77827 C24.023851,176.05527 45.036846,196.79665 70.311249,207.38565 L77.569962,190.6545 C55.04356,181.2025 40.840569,166.63167 31.383965,144.09868 L13.431252,150.77827 z" />
                  <Path Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item6.BodyBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item6.ContinuesVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="29.095" Height="90" Canvas.Left="-4.368" Canvas.Top="67.5" Data="F1 M12.484962,69.695023 C2.1020899,95.057419 3.0821292,125.41771 13.465001,150.77872 L31.385244,144.12247 C22.139343,121.51044 21.425543,100.20227 30.671444,77.582176 L12.484962,69.695023 z" />
                  <Path Style="{StaticResource SubmenuStyle}" Fill="{Binding Model.Item7.BodyBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item7.ContinuesVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="72.349" Height="72.487" Canvas.Left="3.713" Canvas.Top="3.75" Data="F1 M12.451208,69.763016 L30.660728,77.567467 C40.110825,55.040066 55.102123,39.985176 77.632324,30.529577 L69.378029,12.260092 C44.099834,22.852791 23.040207,44.488609 12.451208,69.763016 z" />
                  <!-- Arrow -->
                  <ContentPresenter ContentTemplate="{StaticResource ArrowTemplate}" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Item0.SubmenuVisibility}" Width="12" Height="12" Canvas.Left="107.5" Canvas.Top="-2" RenderTransformOrigin="0.5,0.5">
                    <ContentPresenter.RenderTransform>
                      <RotateTransform Angle="0" />
                    </ContentPresenter.RenderTransform>
                  </ContentPresenter>
                  <ContentPresenter ContentTemplate="{StaticResource ArrowTemplate}" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Item1.SubmenuVisibility}" Width="12" Height="12" Canvas.Left="181" Canvas.Top="32" RenderTransformOrigin="0.5,0.5">
                    <ContentPresenter.RenderTransform>
                      <RotateTransform Angle="45" />
                    </ContentPresenter.RenderTransform>
                  </ContentPresenter>
                  <ContentPresenter ContentTemplate="{StaticResource ArrowTemplate}" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Item2.SubmenuVisibility}" Width="12" Height="12" Canvas.Left="213" Canvas.Top="105" RenderTransformOrigin="0.5,0.5">
                    <ContentPresenter.RenderTransform>
                      <RotateTransform Angle="90" />
                    </ContentPresenter.RenderTransform>
                  </ContentPresenter>
                  <ContentPresenter ContentTemplate="{StaticResource ArrowTemplate}" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Item3.SubmenuVisibility}" Width="12" Height="12" Canvas.Left="181" Canvas.Top="178" RenderTransformOrigin="0.5,0.5">
                    <ContentPresenter.RenderTransform>
                      <RotateTransform Angle="135" />
                    </ContentPresenter.RenderTransform>
                  </ContentPresenter>
                  <ContentPresenter ContentTemplate="{StaticResource ArrowTemplate}" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Item4.SubmenuVisibility}" Width="12" Height="12" Canvas.Left="108.5" Canvas.Top="212.5" RenderTransformOrigin="0.5,0.5">
                    <ContentPresenter.RenderTransform>
                      <RotateTransform Angle="180" />
                    </ContentPresenter.RenderTransform>
                  </ContentPresenter>
                  <ContentPresenter ContentTemplate="{StaticResource ArrowTemplate}" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Item5.SubmenuVisibility}" Width="12" Height="12" Canvas.Left="33.5" Canvas.Top="178" RenderTransformOrigin="0.5,0.5">
                    <ContentPresenter.RenderTransform>
                      <RotateTransform Angle="225" />
                    </ContentPresenter.RenderTransform>
                  </ContentPresenter>
                  <ContentPresenter ContentTemplate="{StaticResource ArrowTemplate}" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Item6.SubmenuVisibility}" Width="12" Height="12" Canvas.Left="1" Canvas.Top="105" RenderTransformOrigin="0.5,0.5">
                    <ContentPresenter.RenderTransform>
                      <RotateTransform Angle="270" />
                    </ContentPresenter.RenderTransform>
                  </ContentPresenter>
                  <ContentPresenter ContentTemplate="{StaticResource ArrowTemplate}" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Item7.SubmenuVisibility}" Width="12" Height="12" Canvas.Left="33.5" Canvas.Top="32" RenderTransformOrigin="0.5,0.5">
                    <ContentPresenter.RenderTransform>
                      <RotateTransform Angle="315" />
                    </ContentPresenter.RenderTransform>
                  </ContentPresenter>
                </Canvas>
              </Viewbox>
            </Grid>
            <Ellipse Name="BodyBlock" Fill="{Binding Model.BodyBrush, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,2,1,0" Height="214" Width="213" HorizontalAlignment="Center" VerticalAlignment="Center"	RenderTransformOrigin="0.5,0.5">
              <Ellipse.RenderTransform>
                <CompositeTransform />
              </Ellipse.RenderTransform>
            </Ellipse>
            <Grid x:Name="ActionContainer" RenderTransformOrigin="0.5,0.5">
              <Grid.Resources>
                <DataTemplate x:Key="BodyTemplate">
                  <Border>
                    <Viewbox Margin="6,7,10,8" >
                      <Grid>
                        <Canvas Width="225" Height="224">
                          <Path Style="{StaticResource BodyStyle}" Fill="{Binding Item0.BodyBrush}" Width="91.913" Height="30.628" Canvas.Left="66.937" Canvas.Top="-6.6" Data="F1 M69.41317,12.226604 L77.648468,30.470997 C88.956665,25.846195 99.90509,24.415724 111.21309,24.415724 C122.52209,24.415724 132.6068,25.906212 143.91679,30.530012 L152.21817,11.720171 C139.53317,6.5268712 124.046,2.9354763 111.373,2.9354763 C98.696098,2.9354763 82.098068,7.0323024 69.41317,12.226604 z" />
                          <Path Style="{StaticResource BodyStyle}" Fill="{Binding Item1.BodyBrush}" Width="71.666" Height="72.756" Canvas.Left="149.734" Canvas.Top="3.3" Data="F1 M144.00598,30.618942 C166.53499,40.068943 181.33624,54.872723 190.79024,77.403824 L208.57227,69.69532 C197.97926,44.418133 177.35776,22.443491 152.08376,11.854589 L144.00598,30.618942 z" />
                          <Path Style="{StaticResource BodyStyle}" Fill="{Binding Item2.BodyBrush}" Width="28.352" Height="90.029" Canvas.Left="201.663" Canvas.Top="67.612" Data="F1 M190.96922,144.14766 L208.57137,150.90529 C218.95335,125.5423 218.90343,95.156754 208.52043,69.797256 L190.78975,77.404129 C200.03374,100.01773 200.21321,121.52866 190.96922,144.14766 z" />
                          <Path Style="{StaticResource BodyStyle}" Fill="{Binding Item3.BodyBrush}" Width="71.423" Height="70.36" Canvas.Left="149.977" Canvas.Top="150.14" Data="F1 M144.22633,190.84468 L151.54428,207.5378 C176.82228,196.94479 197.98187,176.18625 208.57088,150.91225 L190.94542,144.14603 C181.49341,166.67603 165.42511,182.10512 144.22633,190.84468 z" />
                          <Path Style="{StaticResource BodyStyle}" Fill="{Binding Item4.BodyBrush}" Width="90.15" Height="28.039" Canvas.Left="67.95" Canvas.Top="201.761" Data="F1 M70.325226,207.40042 C83.009224,212.59343 98.326828,215.91385 111.00163,215.91385 C123.67663,215.91385 138.85791,212.72881 151.54291,207.53581 L144.17683,190.84399 C132.86983,195.467 122.57102,198.14206 111.26102,198.14206 C99.953033,198.14206 88.926285,195.27675 77.615288,190.65375 L70.325226,207.40042 z" />
                          <Path Style="{StaticResource BodyStyle}" Fill="{Binding Item5.BodyBrush}" Width="71.193" Height="70.245" Canvas.Left="4.8" Canvas.Top="150.086" Data="F1 M13.431252,150.77827 C24.023851,176.05527 45.036846,196.79665 70.311249,207.38565 L77.569962,190.6545 C55.04356,181.2025 40.840569,166.63167 31.383965,144.09868 L13.431252,150.77827 z" />
                          <Path Style="{StaticResource BodyStyle}" Fill="{Binding Item6.BodyBrush}" Width="29.095" Height="90" Canvas.Left="-4.368" Canvas.Top="67.5" Data="F1 M12.484962,69.695023 C2.1020899,95.057419 3.0821292,125.41771 13.465001,150.77872 L31.385244,144.12247 C22.139343,121.51044 21.425543,100.20227 30.671444,77.582176 L12.484962,69.695023 z" />
                          <Path Style="{StaticResource BodyStyle}" Fill="{Binding Item7.BodyBrush}" Width="72.349" Height="72.487" Canvas.Left="3.713" Canvas.Top="3.75" Data="F1 M12.451208,69.763016 L30.660728,77.567467 C40.110825,55.040066 55.102123,39.985176 77.632324,30.529577 L69.378029,12.260092 C44.099834,22.852791 23.040207,44.488609 12.451208,69.763016 z" />
                        </Canvas>
                      </Grid>
                    </Viewbox>
                  </Border>
                </DataTemplate>
              </Grid.Resources>
              <Grid.RenderTransform>
                <CompositeTransform />
              </Grid.RenderTransform>
              <ContentControl ContentTemplate="{StaticResource BodyTemplate}" RenderTransformOrigin="0.5,0.5" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}">
                <ContentControl.RenderTransform>
                  <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                </ContentControl.RenderTransform>
              </ContentControl>
              <ContentControl ContentTemplate="{StaticResource BodyTemplate}" RenderTransformOrigin="0.5,0.5"  DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}">
                <ContentControl.RenderTransform>
                  <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                </ContentControl.RenderTransform>
              </ContentControl>
              <Grid>
                <Button Name="Button0" Style="{StaticResource ButtonStyle}" DataContext="{Binding Model.Item0, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="110,50,114,0" VerticalAlignment="Top" />
                <Button Name="Button1" Style="{StaticResource ButtonStyle}" DataContext="{Binding Model.Item1, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="0,72,71,0" VerticalAlignment="Top" HorizontalAlignment="Right" />
                <Button Name="Button2" Style="{StaticResource ButtonStyle}" DataContext="{Binding Model.Item2, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="0,111,50,113" VerticalAlignment="Stretch" HorizontalAlignment="Right" />
                <Button Name="Button3" Style="{StaticResource ButtonStyle}" DataContext="{Binding Model.Item3, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="0,0,72,71" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                <Button Name="Button4" Style="{StaticResource ButtonStyle}" DataContext="{Binding Model.Item4, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="110,0,114,52" VerticalAlignment="Bottom" />
                <Button Name="Button5" Style="{StaticResource ButtonStyle}" DataContext="{Binding Model.Item5, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="71,0,0,71" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
                <Button Name="Button6" Style="{StaticResource ButtonStyle}" DataContext="{Binding Model.Item6, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="50,111,0,113" VerticalAlignment="Stretch" HorizontalAlignment="Left" />
                <Button Name="Button7" Style="{StaticResource ButtonStyle}" DataContext="{Binding Model.Item7, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="71,72,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
              </Grid>
              <Grid x:Name="LabelContainer" Height="266" Width="266" Opacity="0">
                <Button Style="{StaticResource LabelStyle}" DataContext="{Binding Model.Item0, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="100,59,102,0" HorizontalAlignment="Center" VerticalAlignment="Top" />
                <Button Style="{StaticResource LabelStyle}" DataContext="{Binding Model.Item1, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="0,80,59,0" HorizontalAlignment="Right" VerticalAlignment="Top" />
                <Button Style="{StaticResource LabelStyle}" DataContext="{Binding Model.Item2, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="0,132,39,0" HorizontalAlignment="Right" VerticalAlignment="Top" />
                <Button Style="{StaticResource LabelStyle}" DataContext="{Binding Model.Item3, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="0,0,60,53" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                <Button Style="{StaticResource LabelStyle}" DataContext="{Binding Model.Item4, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="103,0,99,32" HorizontalAlignment="Center" VerticalAlignment="Bottom" />
                <Button Style="{StaticResource LabelStyle}" DataContext="{Binding Model.Item5, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="60,0,0,53" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
                <Button Style="{StaticResource LabelStyle}" DataContext="{Binding Model.Item6, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="37,132,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
                <Button Style="{StaticResource LabelStyle}" DataContext="{Binding Model.Item7, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{Binding IsEnabled}" Margin="59,80,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
              </Grid>
              <Viewbox Margin="24,30,26,28" >
                <Canvas Height="208" Width="208">
                  <!-- Selected-->
                  <Path Style="{StaticResource SelectedStyle}" Stroke="{Binding Model.Item0.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item0.CheckedVisibility, RelativeSource={RelativeSource TemplatedParent}}" Data="M344.2207,299.6763C331.4247,294.5343,318.4687,291.9263,305.6907,291.9263C292.9397,291.9263,280.0137,294.5223,267.2457,299.6433" Height="9.75" Canvas.Left="64.547" Canvas.Top="-1" Width="78.975"/>
                  <Path Style="{StaticResource SelectedStyle}" Stroke="{Binding Model.Item1.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item1.CheckedVisibility, RelativeSource={RelativeSource TemplatedParent}}" Data="M401.0322,355.1919C390.2292,329.8339,371.9282,311.5039,346.6022,300.6779" Height="56.514" Canvas.Left="143.903" Canvas.Top="7.752" Width="56.43"/>
                  <Path Style="{StaticResource SelectedStyle}" Stroke="{Binding Model.Item2.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item2.CheckedVisibility, RelativeSource={RelativeSource TemplatedParent}}" Data="M402.0107,434.4404C412.2717,408.8674,412.2557,382.9604,401.9577,357.3874" Height="79.053" Canvas.Left="199.259" Canvas.Top="64.461" Width="9.736"/>
                  <Path Style="{StaticResource SelectedStyle}" Stroke="{Binding Model.Item3.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item3.CheckedVisibility, RelativeSource={RelativeSource TemplatedParent}}" Data="M346.6035,491.2568C371.9515,480.4248,390.2615,462.0858,401.0565,436.7128" Height="56.544" Canvas.Left="143.905" Canvas.Top="143.786" Width="56.453"/>
                  <Path Style="{StaticResource SelectedStyle}" Stroke="{Binding Model.Item4.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item4.CheckedVisibility, RelativeSource={RelativeSource TemplatedParent}}" Data="M267.2031,492.2959C279.9871,497.4289,292.9351,500.0299,305.7041,500.0299C318.4691,500.0299,331.4101,497.4309,344.1881,492.2989" Height="9.734" Canvas.Left="64.504" Canvas.Top="199.37" Width="78.985"/>
                  <Path Style="{StaticResource SelectedStyle}" Stroke="{Binding Model.Item5.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item5.CheckedVisibility, RelativeSource={RelativeSource TemplatedParent}}" Data="M210.3726,436.793C221.1896,462.168,239.5206,480.506,264.8916,491.322" Height="56.529" Canvas.Left="7.674" Canvas.Top="143.867" Width="56.519"/>
                  <Path Style="{StaticResource SelectedStyle}" Stroke="{Binding Model.Item6.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item6.CheckedVisibility, RelativeSource={RelativeSource TemplatedParent}}" Data="M209.2842,357.7598C199.1382,383.2148,199.1702,408.9958,209.3822,434.4428" Height="78.683" Canvas.Left="-1" Canvas.Top="64.833" Width="9.683"/>
                  <Path Style="{StaticResource SelectedStyle}" Stroke="{Binding Model.Item7.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Model.Item7.CheckedVisibility, RelativeSource={RelativeSource TemplatedParent}}" Data="M264.9282,300.6406C239.5542,311.4476,221.2172,329.7616,210.3922,355.1096" Height="56.469" Canvas.Left="7.693" Canvas.Top="7.714" Width="56.536"/>
                  <!-- BodyHover -->
                  <Path x:Name="BodyHover0" Style="{StaticResource BodyHoverStyle}" Stroke="{Binding Model.Item0.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Data="M344.2207,299.6763C331.4247,294.5343,318.4687,291.9263,305.6907,291.9263C292.9397,291.9263,280.0137,294.5223,267.2457,299.6433" Height="9.75" Canvas.Left="64.547" Canvas.Top="-1" Width="78.975"/>
                  <Path x:Name="BodyHover1" Style="{StaticResource BodyHoverStyle}" Stroke="{Binding Model.Item1.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Data="M401.0322,355.1919C390.2292,329.8339,371.9282,311.5039,346.6022,300.6779" Height="56.514" Canvas.Left="143.903" Canvas.Top="7.752" Width="56.43"/>
                  <Path x:Name="BodyHover2" Style="{StaticResource BodyHoverStyle}" Stroke="{Binding Model.Item2.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Data="M402.0107,434.4404C412.2717,408.8674,412.2557,382.9604,401.9577,357.3874" Height="79.053" Canvas.Left="199.259" Canvas.Top="64.461" Width="9.736"/>
                  <Path x:Name="BodyHover3" Style="{StaticResource BodyHoverStyle}" Stroke="{Binding Model.Item3.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Data="M346.6035,491.2568C371.9515,480.4248,390.2615,462.0858,401.0565,436.7128" Height="56.544" Canvas.Left="143.905" Canvas.Top="143.786" Width="56.453"/>
                  <Path x:Name="BodyHover4" Style="{StaticResource BodyHoverStyle}" Stroke="{Binding Model.Item4.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Data="M267.2031,492.2959C279.9871,497.4289,292.9351,500.0299,305.7041,500.0299C318.4691,500.0299,331.4101,497.4309,344.1881,492.2989" Height="9.734" Canvas.Left="64.504" Canvas.Top="199.37" Width="78.985"/>
                  <Path x:Name="BodyHover5" Style="{StaticResource BodyHoverStyle}" Stroke="{Binding Model.Item5.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Data="M210.3726,436.793C221.1896,462.168,239.5206,480.506,264.8916,491.322" Height="56.529" Canvas.Left="7.674" Canvas.Top="143.867" Width="56.519"/>
                  <Path x:Name="BodyHover6" Style="{StaticResource BodyHoverStyle}" Stroke="{Binding Model.Item6.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Data="M209.2842,357.7598C199.1382,383.2148,199.1702,408.9958,209.3822,434.4428" Height="78.683" Canvas.Left="-1" Canvas.Top="64.833" Width="9.683"/>
                  <Path x:Name="BodyHover7" Style="{StaticResource BodyHoverStyle}" Stroke="{Binding Model.Item7.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Data="M264.9282,300.6406C239.5542,311.4476,221.2172,329.7616,210.3922,355.1096" Height="56.469" Canvas.Left="7.693" Canvas.Top="7.714" Width="56.536"/>
                </Canvas>
              </Viewbox>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:RadialSlider">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RadialSlider">
          <Grid x:Name="LayoutRoot" Height="266" Width="266" IsHitTestVisible="false" FlowDirection="LeftToRight">
            <Grid.Resources>
              <Style TargetType="Path" x:Key="IndicatorBlockStyle">
                <Setter Property="Width" Value="1" />
                <Setter Property="Height" Value="49" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Margin" Value="64" />
              </Style>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.3" To="0.3" Storyboard.TargetName="ControlsContainer" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="HoverIndicator">
                  <Storyboard>
                    <DoubleAnimation To="1" Duration="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Ellipse Name="BodyBlock" Fill="{Binding Model.BodyBrush, RelativeSource={RelativeSource TemplatedParent}}" Height="213" Width="214" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
              <Ellipse.RenderTransform>
                <CompositeTransform />
              </Ellipse.RenderTransform>
            </Ellipse>
            <Grid x:Name="ControlsContainer"  Height="266" Width="266" >
              <ContentPresenter Name="SliderBlock" Height="150" Width="150" VerticalAlignment="Center" HorizontalAlignment="Center">
                <ContentPresenter.Resources>
                  <DataTemplate x:Name="NotchTemplate">
                    <Canvas Height="150" Width="150">
                      <Path Fill="{Binding RingActiveBrush}" Data="M 142,74 L 150,75 L 142,76 Z"/>
                    </Canvas>
                  </DataTemplate>
                </ContentPresenter.Resources>
                <ContentPresenter.Content>
                  <Canvas Height="150" Width="150">
                    <Ellipse Canvas.Left="10" Canvas.Top="10" Height="130" Width="130" Fill="{Binding Model.BodyBrush, RelativeSource={RelativeSource TemplatedParent}}" Stroke="{Binding Model.RingActiveBrush, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="1" />
                    <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}">
                      <ContentPresenter.RenderTransform>
                        <RotateTransform Angle="0" />
                      </ContentPresenter.RenderTransform>
                    </ContentPresenter>
                    <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}">
                      <ContentPresenter.RenderTransform>
                        <RotateTransform Angle="45" />
                      </ContentPresenter.RenderTransform>
                    </ContentPresenter>
                    <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}">
                      <ContentPresenter.RenderTransform>
                        <RotateTransform Angle="90" />
                      </ContentPresenter.RenderTransform>
                    </ContentPresenter>
                    <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}">
                      <ContentPresenter.RenderTransform>
                        <RotateTransform Angle="135" />
                      </ContentPresenter.RenderTransform>
                    </ContentPresenter>
                    <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}">
                      <ContentPresenter.RenderTransform>
                        <RotateTransform Angle="180" />
                      </ContentPresenter.RenderTransform>
                    </ContentPresenter>
                    <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}">
                      <ContentPresenter.RenderTransform>
                        <RotateTransform Angle="225" />
                      </ContentPresenter.RenderTransform>
                    </ContentPresenter>
                    <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}">
                      <ContentPresenter.RenderTransform>
                        <RotateTransform Angle="270" />
                      </ContentPresenter.RenderTransform>
                    </ContentPresenter>
                    <ContentPresenter ContentTemplate="{StaticResource NotchTemplate}" RenderTransformOrigin="0.5,0.5" DataContext="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}">
                      <ContentPresenter.RenderTransform>
                        <RotateTransform Angle="315" />
                      </ContentPresenter.RenderTransform>
                    </ContentPresenter>
                  </Canvas>
                </ContentPresenter.Content>
              </ContentPresenter>
              <Path Name="IndicatorBlock" Fill="{Binding Model.RingActiveBrush, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource IndicatorBlockStyle}" Data="M 0,49 L 0.5,0 L 1,49 L 0,49 Z">
                <Path.RenderTransform>
                  <RotateTransform Angle="{Binding Model.IndicatorAngle, RelativeSource={RelativeSource TemplatedParent}}" CenterX="1" CenterY="69"/>
                </Path.RenderTransform>
              </Path>
              <Path Name="IndicatorHoverBlock" Stroke="{Binding Model.RingHoverBrush, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource IndicatorBlockStyle}" Data="M 0.5,49 L 0.5,15" StrokeDashArray="2,2" Opacity="0">
                <Path.RenderTransform>
                  <RotateTransform Angle="{Binding Model.IndicatorHoverAngle, RelativeSource={RelativeSource TemplatedParent}}" CenterX="1" CenterY="69"/>
                </Path.RenderTransform>
              </Path>
              <Canvas x:Name="LabelContainer" Height="266" Width="266" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="local:RadialMenuHost">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="local:RadialMenuHost">
          <Grid Height="318" Width="278">
            <Grid.Resources>
              <local:InvertConverter x:Key="ic" />
              <Storyboard x:Name="StoryboardMenuRootOpen">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="BackgroundBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="0.75"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.217" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.267" Value="1.01"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="BackgroundBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="0.75"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.217" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.267" Value="1.01"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Name="StoryboardMenuRootClose">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="BackgroundBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1.01"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.183" Value="0.75"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="BackgroundBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1.01"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.183" Value="0.75"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundBlock">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.183" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Name="storyboardMenuRootCloseDefault">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="SubmenuList">
                  <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-13.3382"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-45">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="SubmenuList">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.925899"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.75">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="SubmenuList">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.083" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.925899"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.75">
                    <EasingDoubleKeyFrame.EasingFunction>
                      <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                  </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SubmenuList">
                  <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                  <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups >
              <VisualStateGroup x:Name="IndicatorStates">
                <VisualState x:Name="IndicatorNormal" />
                <VisualState x:Name="IndicatorDisabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0.3" Storyboard.TargetName="IndicatorBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorBack">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="1" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorBackDisabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0.3" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="IndicatorHidden">
                  <Storyboard>
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorBlock" Storyboard.TargetProperty="Opacity" />
                    <DoubleAnimation Duration="0:0:0.15" To="0" Storyboard.TargetName="IndicatorBackBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="IndicatorHoverStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition From="IndicatorHoverActive" GeneratedDuration="0:0:0.3">
                    <Storyboard>
                      <DoubleAnimation To="0" Duration="0:0:0.3" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="IndicatorHoverNone" />
                <VisualState x:Name="IndicatorHoverActive" >
                  <Storyboard>
                    <DoubleAnimation To="1" Duration="0" Storyboard.TargetName="IndicatorHoverBlock" Storyboard.TargetProperty="Opacity" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Grid.RowDefinitions>
              <RowDefinition Height="40" />
              <RowDefinition Height="278" />
            </Grid.RowDefinitions>

            <Grid x:Name="ToolTipContainer" Background="Transparent" IsHitTestVisible="False">
              <Border x:Name="ToolTipBorder" HorizontalAlignment="Center" VerticalAlignment="Center" Background="White" BorderThickness="2" BorderBrush="#808080" Visibility="Collapsed" Padding="10,2" Height="35">
                <TextBlock x:Name="ToolTipTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#808080" FontSize="12"/>
              </Border>
            </Grid>

            <Grid x:Name="LayoutRoot" Height="278" Width="278" FlowDirection="LeftToRight" Grid.Row="1">
              <Grid Name="SubmenuLayoutRoot" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" >
                <Grid x:Name="BackgroundBlock" Width="262" Height="262" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,1,2,1" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False">
                  <Grid.RenderTransform>
                    <CompositeTransform />
                  </Grid.RenderTransform>
                  <Ellipse x:Name="RingBlock" Fill="{TemplateBinding RingBackgroundBrush}" Width="262" Height="262"  />
                  <Ellipse x:Name="BodyBlock" Fill="{TemplateBinding BodyBrush}" Width="200" Height="200" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Grid>
                <Grid Name="SubmenuList" RenderTransformOrigin="0.5,0.5">
                  <Grid.RenderTransform>
                    <CompositeTransform />
                  </Grid.RenderTransform>
                </Grid>
              </Grid>
              <Ellipse Name="IndicatorHoverBlock" Width="46" Height="46" HorizontalAlignment="Center" VerticalAlignment="Center" StrokeThickness="2" Opacity="0" Stroke="{TemplateBinding RingActiveBrush}" Fill="{Binding BodyBrush}" />
              <Border Name="IndicatorBackBlock" Height="46" Width="46" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
                <Viewbox>
                  <Grid Height="48" Width="48" >
                    <Grid Margin="0,-17,0,0">
                      <TextBlock FontFamily="Segoe UI Symbol" FontWeight="Normal" FontSize="56" Text="&#xE0A8;" Foreground="{TemplateBinding BodyBrush}"/>
                      <TextBlock FontFamily="Segoe UI Symbol" FontWeight="Normal" FontSize="56" Text="&#xE071;" Foreground="{TemplateBinding RingActiveBrush}"/>
                      <TextBlock FontFamily="Segoe UI Symbol" FontWeight="Normal" FontSize="56" Text="&#xE0A6;" Foreground="{TemplateBinding RingActiveBrush}"/>
                    </Grid>
                  </Grid>
                </Viewbox>
              </Border>
              <!-- TODO: Use advanced touch mask: -->
              <!-- <Ellipse Name="touchTargetCollapsed" Width="66" Height="66" Fill="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" />      -->
              <!--<Ellipse Name="touchTargetExpanded" Width="278" Height="278" Fill="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="false" />-->
              <Border Name="TouchMask" Width="278" Height="278" Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}" />
              <Image Name="IndicatorBlock" Height="38" Width="38" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Root.Image, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource ic}}" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>

